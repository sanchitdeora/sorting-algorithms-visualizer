{"ast":null,"code":"export function getBubbleSort(array){var auxiliaryArray=array.slice();var animations=[];console.log(auxiliaryArray);var length=array.length;var temp;for(var i=0;i<length-1;i++){for(var j=0;j<length-i-1;j++){animations.push([j,j+1]);if(auxiliaryArray[j]>auxiliaryArray[j+1]){temp=auxiliaryArray[j];auxiliaryArray[j]=auxiliaryArray[j+1];auxiliaryArray[j+1]=temp;}animations.push([auxiliaryArray[j],auxiliaryArray[j+1]]);animations.push([j,j+1]);}// animations.push([\"End of Iteration\", length - 1 - i]);\n}console.log(animations);return animations;}","map":{"version":3,"sources":["C:/Sanchit/Projects/sorting-algorithms-visualizer/src/Algorithms/bubbleSort.js"],"names":["getBubbleSort","array","auxiliaryArray","slice","animations","console","log","length","temp","i","j","push"],"mappings":"AAAA,MAAO,SAASA,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CACjC,GAAMC,CAAAA,cAAc,CAAGD,KAAK,CAACE,KAAN,EAAvB,CACA,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACAC,OAAO,CAACC,GAAR,CAAYJ,cAAZ,EACA,GAAMK,CAAAA,MAAM,CAAGN,KAAK,CAACM,MAArB,CACA,GAAIC,CAAAA,IAAJ,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,MAAM,CAAG,CAA7B,CAAgCE,CAAC,EAAjC,CAAsC,CAClC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,MAAM,CAAGE,CAAT,CAAa,CAAjC,CAAoCC,CAAC,EAArC,CAA0C,CACtCN,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAD,CAAKA,CAAC,CAAE,CAAR,CAAhB,EACA,GAAIR,cAAc,CAACQ,CAAD,CAAd,CAAoBR,cAAc,CAACQ,CAAC,CAAG,CAAL,CAAtC,CAA+C,CAC3CF,IAAI,CAAGN,cAAc,CAACQ,CAAD,CAArB,CACAR,cAAc,CAACQ,CAAD,CAAd,CAAoBR,cAAc,CAACQ,CAAC,CAAG,CAAL,CAAlC,CACAR,cAAc,CAACQ,CAAC,CAAG,CAAL,CAAd,CAAwBF,IAAxB,CACH,CACDJ,UAAU,CAACO,IAAX,CAAgB,CAACT,cAAc,CAACQ,CAAD,CAAf,CAAoBR,cAAc,CAACQ,CAAC,CAAG,CAAL,CAAlC,CAAhB,EACAN,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAD,CAAIA,CAAC,CAAG,CAAR,CAAhB,EACH,CACD;AACH,CACDL,OAAO,CAACC,GAAR,CAAYF,UAAZ,EACA,MAAOA,CAAAA,UAAP,CACH","sourcesContent":["export function getBubbleSort(array) {\r\n    const auxiliaryArray = array.slice();\r\n    const animations = [];\r\n    console.log(auxiliaryArray);\r\n    const length = array.length;\r\n    var temp;\r\n    for (let i = 0; i < length - 1; i ++) {\r\n        for (let j = 0; j < length - i - 1; j ++) {\r\n            animations.push([j, (j +1)]);\r\n            if (auxiliaryArray[j] > auxiliaryArray[j + 1]) {\r\n                temp = auxiliaryArray[j];\r\n                auxiliaryArray[j] = auxiliaryArray[j + 1];\r\n                auxiliaryArray[j + 1] = temp;\r\n            }\r\n            animations.push([auxiliaryArray[j], auxiliaryArray[j + 1]]);\r\n            animations.push([j, j + 1]);\r\n        }\r\n        // animations.push([\"End of Iteration\", length - 1 - i]);\r\n    }\r\n    console.log(animations);\r\n    return animations;\r\n}"]},"metadata":{},"sourceType":"module"}