{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sanchit\\\\Projects\\\\sorting-algorithms-visualizer\\\\src\\\\Visualizer\\\\Visualizer.jsx\";\nimport React from 'react';\nimport './Visualizer.css';\nexport default class Visualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    var max = 500;\n    var min = 5;\n\n    for (let i = 0; i < 300; i++) {\n      array.push(Math.floor(Math.random() * max + min));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"array-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, array.map((value, index) => React.createElement(\"div\", {\n      className: \"array-bar\",\n      key: index,\n      style: {\n        height: `${value}px`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Randomize Array!\"), React.createElement(\"button\", {\n      onClick: () => this.mergeSort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Merge Sort\"), React.createElement(\"button\", {\n      onClick: () => this.quickSort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Quick Sort\"), React.createElement(\"button\", {\n      onClick: () => this.heapSort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"HeapSort\"), React.createElement(\"button\", {\n      onClick: () => this.bubbleSort(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Bubble Sort\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Sanchit/Projects/sorting-algorithms-visualizer/src/Visualizer/Visualizer.jsx"],"names":["React","Visualizer","Component","constructor","props","state","array","componentDidMount","resetArray","max","min","i","push","Math","floor","random","setState","render","map","value","index","height","mergeSort","quickSort","heapSort","bubbleSort"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAEA,eAAe,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAEDA,EAAAA,UAAU,GAAG;AACT,UAAMF,KAAK,GAAG,EAAd;AACA,QAAIG,GAAG,GAAI,GAAX;AACA,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAwBA,CAAC,EAAzB,EAA8B;AAC1BL,MAAAA,KAAK,CAACM,IAAN,CAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,GAAhB,GAAsBC,GAAjC,CAAX;AACH;;AACD,SAAKM,QAAL,CAAc;AAACV,MAAAA;AAAD,KAAd;AACH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAACX,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,WACI;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,KAAK,CAACY,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KACP;AAAK,MAAA,SAAS,EAAG,WAAjB;AAA6B,MAAA,GAAG,EAAIA,KAApC;AAA2C,MAAA,KAAK,EAAI;AAACC,QAAAA,MAAM,EAAG,GAAEF,KAAM;AAAlB,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,EAKI;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAKX,UAAL,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,EAMI;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAKc,SAAL,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,EAOI;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAKC,SAAL,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,EAQI;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAKC,QAAL,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,EASI;AAAQ,MAAA,OAAO,EAAI,MAAM,KAAKC,UAAL,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATJ,CADJ;AAaH;;AAtCmD","sourcesContent":["import React from 'react';\r\nimport './Visualizer.css';\r\n\r\nexport default class Visualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        var max  = 500;\r\n        var min = 5;\r\n        for(let i = 0; i < 300; i ++) {\r\n            array.push(Math.floor(Math.random() * max + min));\r\n        }\r\n        this.setState({array});\r\n    }\r\n\r\n    render() {\r\n        const {array} = this.state;\r\n\r\n        return (\r\n            <div className = \"array-container\">\r\n                {array.map((value, index) => (\r\n                    <div className = \"array-bar\" key = {index} style = {{height: `${value}px`}}>\r\n                    </div>\r\n                ))}\r\n                <button onClick = {() => this.resetArray()}>Randomize Array!</button>\r\n                <button onClick = {() => this.mergeSort()}>Merge Sort</button>\r\n                <button onClick = {() => this.quickSort()}>Quick Sort</button>\r\n                <button onClick = {() => this.heapSort()}>HeapSort</button>\r\n                <button onClick = {() => this.bubbleSort()}>Bubble Sort</button>\r\n            </div>\r\n        );\r\n    }  \r\n\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}