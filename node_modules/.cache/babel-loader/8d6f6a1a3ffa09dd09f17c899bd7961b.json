{"ast":null,"code":"import './Visualizer.css';\nexport function mergeSort() {\n  const button = document.getElementById(\"merge\").style;\n  button.backgroundColor = \"#1da1f2\";\n  button.color = \"white\"; // console.log(button);\n\n  const animations = Merge.getMergeSortAnimations(this.state.array);\n\n  for (let i = 0; i < animations.length; i++) {\n    const arrayBars = document.getElementsByClassName('array-bar');\n    const isColorChange = i % 3 !== 2;\n\n    if (isColorChange) {\n      const [barOneIndex, barTwoIndex] = animations[i];\n      const barOneStyle = arrayBars[barOneIndex].style;\n      const barTwoStyle = arrayBars[barTwoIndex].style;\n      const color = i % 3 === 0 ? SECONDARY_COLOR : INTERMEDIATE_COLOR;\n      setTimeout(() => {\n        barOneStyle.backgroundColor = color;\n        barTwoStyle.backgroundColor = color;\n      }, i * ANIMATION_SPEED_MS);\n    } else {\n      setTimeout(() => {\n        const [barOneIndex, newHeight] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        barOneStyle.height = `${newHeight}px`;\n      }, i * ANIMATION_SPEED_MS);\n    }\n  }\n\n  setTimeout(() => {\n    const arrayBars = document.getElementsByClassName('array-bar');\n\n    for (let i = 0; i < arrayBars.length; i++) arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\n\n    button.removeProperty(\"background-color\");\n    button.removeProperty(\"color\");\n  }, animations.length * ANIMATION_SPEED_MS);\n}","map":{"version":3,"sources":["C:/Sanchit/Projects/sorting-algorithms-visualizer/src/Visualizer/merge.js"],"names":["mergeSort","button","document","getElementById","style","backgroundColor","color","animations","Merge","getMergeSortAnimations","state","array","i","length","arrayBars","getElementsByClassName","isColorChange","barOneIndex","barTwoIndex","barOneStyle","barTwoStyle","SECONDARY_COLOR","INTERMEDIATE_COLOR","setTimeout","ANIMATION_SPEED_MS","newHeight","height","PRIMARY_COLOR","removeProperty"],"mappings":"AAAA,OAAO,kBAAP;AAEA,OAAO,SAASA,SAAT,GAAqB;AACxB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAhD;AACAH,EAAAA,MAAM,CAACI,eAAP,GAAyB,SAAzB;AACAJ,EAAAA,MAAM,CAACK,KAAP,GAAe,OAAf,CAHwB,CAIxB;;AACA,QAAMC,UAAU,GAAGC,KAAK,CAACC,sBAAN,CAA6B,KAAKC,KAAL,CAAWC,KAAxC,CAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAAU,CAACM,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,UAAME,SAAS,GAAGZ,QAAQ,CAACa,sBAAT,CAAgC,WAAhC,CAAlB;AACA,UAAMC,aAAa,GAAGJ,CAAC,GAAG,CAAJ,KAAU,CAAhC;;AACA,QAAII,aAAJ,EAAmB;AACnB,YAAM,CAACC,WAAD,EAAcC,WAAd,IAA6BX,UAAU,CAACK,CAAD,CAA7C;AACA,YAAMO,WAAW,GAAGL,SAAS,CAACG,WAAD,CAAT,CAAuBb,KAA3C;AACA,YAAMgB,WAAW,GAAGN,SAAS,CAACI,WAAD,CAAT,CAAuBd,KAA3C;AACA,YAAME,KAAK,GAAGM,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAcS,eAAd,GAAgCC,kBAA9C;AACAC,MAAAA,UAAU,CAAC,MAAM;AACbJ,QAAAA,WAAW,CAACd,eAAZ,GAA8BC,KAA9B;AACAc,QAAAA,WAAW,CAACf,eAAZ,GAA8BC,KAA9B;AACH,OAHS,EAGPM,CAAC,GAAGY,kBAHG,CAAV;AAIC,KATD,MASO;AACPD,MAAAA,UAAU,CAAC,MAAM;AACb,cAAM,CAACN,WAAD,EAAcQ,SAAd,IAA2BlB,UAAU,CAACK,CAAD,CAA3C;AACA,cAAMO,WAAW,GAAGL,SAAS,CAACG,WAAD,CAAT,CAAuBb,KAA3C;AACAe,QAAAA,WAAW,CAACO,MAAZ,GAAsB,GAAED,SAAU,IAAlC;AACH,OAJS,EAIPb,CAAC,GAAGY,kBAJG,CAAV;AAKC;AACJ;;AACDD,EAAAA,UAAU,CAAC,MAAM;AACjB,UAAMT,SAAS,GAAGZ,QAAQ,CAACa,sBAAT,CAAgC,WAAhC,CAAlB;;AACA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,SAAS,CAACD,MAA9B,EAAsCD,CAAC,EAAvC,EACIE,SAAS,CAACF,CAAD,CAAT,CAAaR,KAAb,CAAmBC,eAAnB,GAAqCsB,aAArC;;AACJ1B,IAAAA,MAAM,CAAC2B,cAAP,CAAsB,kBAAtB;AACA3B,IAAAA,MAAM,CAAC2B,cAAP,CAAsB,OAAtB;AACC,GANS,EAMPrB,UAAU,CAACM,MAAX,GAAoBW,kBANb,CAAV;AASH","sourcesContent":["import './Visualizer.css';\r\n\r\nexport function mergeSort() {\r\n    const button = document.getElementById(\"merge\").style;\r\n    button.backgroundColor = \"#1da1f2\";\r\n    button.color = \"white\";\r\n    // console.log(button);\r\n    const animations = Merge.getMergeSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        const isColorChange = i % 3 !== 2;\r\n        if (isColorChange) {    \r\n        const [barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : INTERMEDIATE_COLOR;\r\n        setTimeout(() => {\r\n            barOneStyle.backgroundColor = color;\r\n            barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n        } else {\r\n        setTimeout(() => {\r\n            const [barOneIndex, newHeight] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIndex].style;\r\n            barOneStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n        }\r\n    }\r\n    setTimeout(() => {\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    for (let i = 0; i < arrayBars.length; i ++)\r\n        arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\r\n    button.removeProperty(\"background-color\");\r\n    button.removeProperty(\"color\");\r\n    }, animations.length * ANIMATION_SPEED_MS);\r\n\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}