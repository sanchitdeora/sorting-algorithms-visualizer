{"ast":null,"code":"export function getQuickSort(array) {\n  const auxiliaryArray = array.slice();\n  const animations = [];\n  sort(animations, auxiliaryArray, 0, array.length - 1);\n  return animations;\n}\n\nfunction sort(animations, auxiliaryArray, low, high) {\n  if (low < high) {\n    const pi = partition(animations, auxiliaryArray, low, high);\n    sort(animations, auxiliaryArray, low, pi - 1);\n    sort(animations, auxiliaryArray, pi + 1, high);\n  }\n}\n\nfunction partition(animations, auxiliaryArray, low, high) {\n  const pivot = auxiliaryArray[low];\n  animations.push([\"Pivot\", low]);\n  var i = low;\n  var temp;\n\n  for (let j = low + 1; j <= high; j++) {\n    animations.push([\"Compare\", j]);\n\n    if (auxiliaryArray[j] <= pivot) {\n      i = i + 1;\n      temp = auxiliaryArray[i];\n      auxiliaryArray[i] = auxiliaryArray[j];\n      auxiliaryArray[j] = temp;\n    }\n\n    animations.push([\"Swap\", [auxiliaryArray[i], auxiliaryArray[j]]]); // animations.push([i, j]);\n\n    animations.push([\"Reset\", j]);\n  }\n\n  temp = auxiliaryArray[i];\n  auxiliaryArray[i] = auxiliaryArray[low];\n  auxiliaryArray[low] = temp;\n  animations.push([\"Reset\", low]);\n  return i;\n}","map":{"version":3,"sources":["C:/Sanchit/Projects/sorting-algorithms-visualizer/src/Algorithms/quickSort.js"],"names":["getQuickSort","array","auxiliaryArray","slice","animations","sort","length","low","high","pi","partition","pivot","push","i","temp","j"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,QAAMC,cAAc,GAAGD,KAAK,CAACE,KAAN,EAAvB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACAC,EAAAA,IAAI,CAACD,UAAD,EAAaF,cAAb,EAA6B,CAA7B,EAAgCD,KAAK,CAACK,MAAN,GAAe,CAA/C,CAAJ;AACA,SAAOF,UAAP;AACH;;AAED,SAASC,IAAT,CAAcD,UAAd,EAA0BF,cAA1B,EAA0CK,GAA1C,EAA+CC,IAA/C,EAAqD;AACjD,MAAGD,GAAG,GAAGC,IAAT,EAAe;AACX,UAAMC,EAAE,GAAGC,SAAS,CAACN,UAAD,EAAaF,cAAb,EAA6BK,GAA7B,EAAkCC,IAAlC,CAApB;AACAH,IAAAA,IAAI,CAACD,UAAD,EAAaF,cAAb,EAA6BK,GAA7B,EAAmCE,EAAE,GAAG,CAAxC,CAAJ;AACAJ,IAAAA,IAAI,CAACD,UAAD,EAAaF,cAAb,EAA8BO,EAAE,GAAG,CAAnC,EAAuCD,IAAvC,CAAJ;AACH;AACJ;;AAED,SAASE,SAAT,CAAmBN,UAAnB,EAA+BF,cAA/B,EAA+CK,GAA/C,EAAoDC,IAApD,EAA0D;AACtD,QAAMG,KAAK,GAAGT,cAAc,CAACK,GAAD,CAA5B;AACAH,EAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,OAAD,EAAUL,GAAV,CAAhB;AACA,MAAIM,CAAC,GAAGN,GAAR;AACA,MAAIO,IAAJ;;AACA,OAAI,IAAIC,CAAC,GAAGR,GAAG,GAAG,CAAlB,EAAqBQ,CAAC,IAAIP,IAA1B,EAAgCO,CAAC,EAAjC,EAAsC;AAClCX,IAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,SAAD,EAAYG,CAAZ,CAAhB;;AACA,QAAGb,cAAc,CAACa,CAAD,CAAd,IAAqBJ,KAAxB,EAA+B;AAC3BE,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACAC,MAAAA,IAAI,GAAGZ,cAAc,CAACW,CAAD,CAArB;AACAX,MAAAA,cAAc,CAACW,CAAD,CAAd,GAAoBX,cAAc,CAACa,CAAD,CAAlC;AACAb,MAAAA,cAAc,CAACa,CAAD,CAAd,GAAoBD,IAApB;AACH;;AACDV,IAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,MAAD,EAAS,CAACV,cAAc,CAACW,CAAD,CAAf,EAAoBX,cAAc,CAACa,CAAD,CAAlC,CAAT,CAAhB,EARkC,CASlC;;AACAX,IAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,OAAD,EAAUG,CAAV,CAAhB;AACH;;AACDD,EAAAA,IAAI,GAAGZ,cAAc,CAACW,CAAD,CAArB;AACAX,EAAAA,cAAc,CAACW,CAAD,CAAd,GAAoBX,cAAc,CAACK,GAAD,CAAlC;AACAL,EAAAA,cAAc,CAACK,GAAD,CAAd,GAAsBO,IAAtB;AACAV,EAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,OAAD,EAAUL,GAAV,CAAhB;AACA,SAAOM,CAAP;AACH","sourcesContent":["export function getQuickSort(array) {\r\n    const auxiliaryArray = array.slice();\r\n    const animations = [];\r\n    sort(animations, auxiliaryArray, 0, array.length - 1);\r\n    return animations;\r\n}\r\n\r\nfunction sort(animations, auxiliaryArray, low, high) {\r\n    if(low < high) {\r\n        const pi = partition(animations, auxiliaryArray, low, high);\r\n        sort(animations, auxiliaryArray, low, (pi - 1));\r\n        sort(animations, auxiliaryArray, (pi + 1), high);\r\n    }\r\n}\r\n\r\nfunction partition(animations, auxiliaryArray, low, high) {\r\n    const pivot = auxiliaryArray[low];\r\n    animations.push([\"Pivot\", low]);\r\n    var i = low;\r\n    var temp;\r\n    for(let j = low + 1; j <= high; j ++) {\r\n        animations.push([\"Compare\", j])\r\n        if(auxiliaryArray[j] <= pivot) {\r\n            i = i + 1;\r\n            temp = auxiliaryArray[i];\r\n            auxiliaryArray[i] = auxiliaryArray[j];\r\n            auxiliaryArray[j] = temp;\r\n        }\r\n        animations.push([\"Swap\", [auxiliaryArray[i], auxiliaryArray[j]]]);\r\n        // animations.push([i, j]);\r\n        animations.push([\"Reset\", j])\r\n    }\r\n    temp = auxiliaryArray[i];\r\n    auxiliaryArray[i] = auxiliaryArray[low];\r\n    auxiliaryArray[low] = temp;\r\n    animations.push([\"Reset\", low])\r\n    return i;\r\n}"]},"metadata":{},"sourceType":"module"}